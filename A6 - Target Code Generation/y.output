Grammar

    0 $accept: START $end

    1 START: LIST

    2 LIST: STMT
    3     | STMT M LIST

    4 STMT: ASGN
    5     | COND
    6     | LOOP

    7 OPER: ADD
    8     | SUB
    9     | MUL
   10     | DIV
   11     | MOD

   12 RELN: EQ
   13     | LT
   14     | GT
   15     | LE
   16     | GE
   17     | NE

   18 M: ε

   19 ASGN: LP set IDEN ATOM RP

   20 COND: LP when BOOL LIST M RP

   21 LOOP: LP loop WHILE M BOOL LIST M RP

   22 EXPR: LP OPER ATOM ATOM RP

   23 BOOL: LP RELN ATOM ATOM RP

   24 ATOM: IDEN
   25     | NUMB
   26     | EXPR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDEN <id> (258) 19 24
    NUMB <num> (259) 25
    set <keyword> (260) 19
    when <keyword> (261) 20
    loop <keyword> (262) 21
    WHILE <keyword> (263) 21
    ADD <op> (264) 7
    SUB <op> (265) 8
    MUL <op> (266) 9
    DIV <op> (267) 10
    MOD <op> (268) 11
    EQ <relop> (269) 12
    LT <relop> (270) 13
    GT <relop> (271) 14
    LE <relop> (272) 15
    GE <relop> (273) 16
    NE <relop> (274) 17
    LP <punc> (275) 19 20 21 22 23
    RP <punc> (276) 19 20 21 22 23


Nonterminals, with rules where they appear

    $accept (22)
        on left: 0
    START (23)
        on left: 1
        on right: 0
    LIST <stmt> (24)
        on left: 2 3
        on right: 1 3 20 21
    STMT <stmt> (25)
        on left: 4 5 6
        on right: 2 3
    OPER <op> (26)
        on left: 7 8 9 10 11
        on right: 22
    RELN <relop> (27)
        on left: 12 13 14 15 16 17
        on right: 23
    M <instr> (28)
        on left: 18
        on right: 3 20 21
    ASGN (29)
        on left: 19
        on right: 4
    COND <stmt> (30)
        on left: 20
        on right: 5
    LOOP <stmt> (31)
        on left: 21
        on right: 6
    EXPR <symb> (32)
        on left: 22
        on right: 26
    BOOL <bools> (33)
        on left: 23
        on right: 20 21
    ATOM <symb> (34)
        on left: 24 25 26
        on right: 19 22 23


State 0

    0 $accept: • START $end

    LP  shift, and go to state 1

    START  go to state 2
    LIST   go to state 3
    STMT   go to state 4
    ASGN   go to state 5
    COND   go to state 6
    LOOP   go to state 7


State 1

   19 ASGN: LP • set IDEN ATOM RP
   20 COND: LP • when BOOL LIST M RP
   21 LOOP: LP • loop WHILE M BOOL LIST M RP

    set   shift, and go to state 8
    when  shift, and go to state 9
    loop  shift, and go to state 10


State 2

    0 $accept: START • $end

    $end  shift, and go to state 11


State 3

    1 START: LIST •

    $default  reduce using rule 1 (START)


State 4

    2 LIST: STMT •
    3     | STMT • M LIST

    LP        reduce using rule 18 (M)
    $default  reduce using rule 2 (LIST)

    M  go to state 12


State 5

    4 STMT: ASGN •

    $default  reduce using rule 4 (STMT)


State 6

    5 STMT: COND •

    $default  reduce using rule 5 (STMT)


State 7

    6 STMT: LOOP •

    $default  reduce using rule 6 (STMT)


State 8

   19 ASGN: LP set • IDEN ATOM RP

    IDEN  shift, and go to state 13


State 9

   20 COND: LP when • BOOL LIST M RP

    LP  shift, and go to state 14

    BOOL  go to state 15


State 10

   21 LOOP: LP loop • WHILE M BOOL LIST M RP

    WHILE  shift, and go to state 16


State 11

    0 $accept: START $end •

    $default  accept


State 12

    3 LIST: STMT M • LIST

    LP  shift, and go to state 1

    LIST  go to state 17
    STMT  go to state 4
    ASGN  go to state 5
    COND  go to state 6
    LOOP  go to state 7


State 13

   19 ASGN: LP set IDEN • ATOM RP

    IDEN  shift, and go to state 18
    NUMB  shift, and go to state 19
    LP    shift, and go to state 20

    EXPR  go to state 21
    ATOM  go to state 22


State 14

   23 BOOL: LP • RELN ATOM ATOM RP

    EQ  shift, and go to state 23
    LT  shift, and go to state 24
    GT  shift, and go to state 25
    LE  shift, and go to state 26
    GE  shift, and go to state 27
    NE  shift, and go to state 28

    RELN  go to state 29


State 15

   20 COND: LP when BOOL • LIST M RP

    LP  shift, and go to state 1

    LIST  go to state 30
    STMT  go to state 4
    ASGN  go to state 5
    COND  go to state 6
    LOOP  go to state 7


State 16

   21 LOOP: LP loop WHILE • M BOOL LIST M RP

    $default  reduce using rule 18 (M)

    M  go to state 31


State 17

    3 LIST: STMT M LIST •

    $default  reduce using rule 3 (LIST)


State 18

   24 ATOM: IDEN •

    $default  reduce using rule 24 (ATOM)


State 19

   25 ATOM: NUMB •

    $default  reduce using rule 25 (ATOM)


State 20

   22 EXPR: LP • OPER ATOM ATOM RP

    ADD  shift, and go to state 32
    SUB  shift, and go to state 33
    MUL  shift, and go to state 34
    DIV  shift, and go to state 35
    MOD  shift, and go to state 36

    OPER  go to state 37


State 21

   26 ATOM: EXPR •

    $default  reduce using rule 26 (ATOM)


State 22

   19 ASGN: LP set IDEN ATOM • RP

    RP  shift, and go to state 38


State 23

   12 RELN: EQ •

    $default  reduce using rule 12 (RELN)


State 24

   13 RELN: LT •

    $default  reduce using rule 13 (RELN)


State 25

   14 RELN: GT •

    $default  reduce using rule 14 (RELN)


State 26

   15 RELN: LE •

    $default  reduce using rule 15 (RELN)


State 27

   16 RELN: GE •

    $default  reduce using rule 16 (RELN)


State 28

   17 RELN: NE •

    $default  reduce using rule 17 (RELN)


State 29

   23 BOOL: LP RELN • ATOM ATOM RP

    IDEN  shift, and go to state 18
    NUMB  shift, and go to state 19
    LP    shift, and go to state 20

    EXPR  go to state 21
    ATOM  go to state 39


State 30

   20 COND: LP when BOOL LIST • M RP

    $default  reduce using rule 18 (M)

    M  go to state 40


State 31

   21 LOOP: LP loop WHILE M • BOOL LIST M RP

    LP  shift, and go to state 14

    BOOL  go to state 41


State 32

    7 OPER: ADD •

    $default  reduce using rule 7 (OPER)


State 33

    8 OPER: SUB •

    $default  reduce using rule 8 (OPER)


State 34

    9 OPER: MUL •

    $default  reduce using rule 9 (OPER)


State 35

   10 OPER: DIV •

    $default  reduce using rule 10 (OPER)


State 36

   11 OPER: MOD •

    $default  reduce using rule 11 (OPER)


State 37

   22 EXPR: LP OPER • ATOM ATOM RP

    IDEN  shift, and go to state 18
    NUMB  shift, and go to state 19
    LP    shift, and go to state 20

    EXPR  go to state 21
    ATOM  go to state 42


State 38

   19 ASGN: LP set IDEN ATOM RP •

    $default  reduce using rule 19 (ASGN)


State 39

   23 BOOL: LP RELN ATOM • ATOM RP

    IDEN  shift, and go to state 18
    NUMB  shift, and go to state 19
    LP    shift, and go to state 20

    EXPR  go to state 21
    ATOM  go to state 43


State 40

   20 COND: LP when BOOL LIST M • RP

    RP  shift, and go to state 44


State 41

   21 LOOP: LP loop WHILE M BOOL • LIST M RP

    LP  shift, and go to state 1

    LIST  go to state 45
    STMT  go to state 4
    ASGN  go to state 5
    COND  go to state 6
    LOOP  go to state 7


State 42

   22 EXPR: LP OPER ATOM • ATOM RP

    IDEN  shift, and go to state 18
    NUMB  shift, and go to state 19
    LP    shift, and go to state 20

    EXPR  go to state 21
    ATOM  go to state 46


State 43

   23 BOOL: LP RELN ATOM ATOM • RP

    RP  shift, and go to state 47


State 44

   20 COND: LP when BOOL LIST M RP •

    $default  reduce using rule 20 (COND)


State 45

   21 LOOP: LP loop WHILE M BOOL LIST • M RP

    $default  reduce using rule 18 (M)

    M  go to state 48


State 46

   22 EXPR: LP OPER ATOM ATOM • RP

    RP  shift, and go to state 49


State 47

   23 BOOL: LP RELN ATOM ATOM RP •

    $default  reduce using rule 23 (BOOL)


State 48

   21 LOOP: LP loop WHILE M BOOL LIST M • RP

    RP  shift, and go to state 50


State 49

   22 EXPR: LP OPER ATOM ATOM RP •

    $default  reduce using rule 22 (EXPR)


State 50

   21 LOOP: LP loop WHILE M BOOL LIST M RP •

    $default  reduce using rule 21 (LOOP)
